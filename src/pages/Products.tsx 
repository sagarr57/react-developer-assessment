import React, { useEffect, useState } from "react";
import { useAppDispatch, useAppSelector } from "../store/hooks";
import { fetchProducts } from "../features/productSlice";
import DataTable from "../components/DataTable";
import Pagination from "../components/Pagination";
import SearchBar from "../components/SearchBar";

const Products: React.FC = () => {
  const dispatch = useAppDispatch();
  const { products, status } = useAppSelector((state) => state.products);
  const [filteredProducts, setFilteredProducts] = useState(products);
  const [pageSize, setPageSize] = useState(5);
  const [currentPage, setCurrentPage] = useState(1);
  const [activeTab, setActiveTab] = useState("ALL");

  useEffect(() => {
    dispatch(fetchProducts(pageSize));
  }, [dispatch, pageSize]);

  useEffect(() => {
    setFilteredProducts(
      activeTab === "ALL" ? products : products.filter((prod) => prod.category.toLowerCase() === "laptops")
    );
  }, [products, activeTab]);

  const handleSearch = (query: string) => {
    if (query) {
      setFilteredProducts(products.filter((product) => product.title.toLowerCase().includes(query.toLowerCase())));
    } else {
      setFilteredProducts(products);
    }
  };

  const handlePageChange = (page: number) => {
    setCurrentPage(page);
    dispatch(fetchProducts(pageSize));
  };

  const columns = ["title", "brand", "category", "price", "stock", "rating"];

  return (
    <div className="p-6">
      <h2 className="text-xl font-bold text-black mb-4">Products</h2>
      <div className="flex justify-between mb-4">
        <div>
          <button className={`mr-2 p-2 ${activeTab === "ALL" ? "bg-black text-white" : "bg-grey"}`} onClick={() => setActiveTab("ALL")}>
            All
          </button>
          <button className={`p-2 ${activeTab === "Laptops" ? "bg-black text-white" : "bg-grey"}`} onClick={() => setActiveTab("Laptops")}>
            Laptops
          </button>
        </div>
        <select className="border border-grey p-2 rounded-md" value={pageSize} onChange={(e) => setPageSize(Number(e.target.value))}>
          {[5, 10, 20, 50].map((size) => (
            <option key={size} value={size}>
              {size} Entries
            </option>
          ))}
        </select>
        <SearchBar onSearch={handleSearch} />
      </div>
      {status === "loading" ? <p>Loading...</p> : <DataTable data={filteredProducts} columns={columns} />}
      <Pagination currentPage={currentPage} totalPages={5} onPageChange={handlePageChange} />
    </div>
  );
};

export default Products;